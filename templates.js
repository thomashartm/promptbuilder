export const templates = {
  "bug-report": {
    label: "🐞 Report a Bug Clearly",
    category: "Tester",
    goal: "Generate a detailed bug report from a description",
    context: "User explains a UI issue in the admin panel",
    details:
      "Include browser info, steps to reproduce, expected vs actual behavior",
    steps: "Structure as title, environment, steps, expected, actual",
    refine: "Ensure reproducibility",
  },
  "unit-test": {
    label: "🧪 Generate Unit Tests",
    category: "Developer",
    goal: "Write unit tests for a given function",
    context: "Code snippet of a JavaScript function",
    details: "Use Jest syntax",
    steps: "Cover edge cases and inputs",
    refine: "Make it readable and atomic",
  },
  "sql-optimize": {
    label: "📊 Optimize SQL Query",
    category: "Developer",
    goal: "Review and optimize a SQL SELECT query",
    context: "Given a slow-running query",
    details: "MySQL 8.0, table has millions of rows",
    steps: "Analyze indexes, suggest better structure",
    refine: "Rewrite query if needed",
  },
  "api-doc": {
    label: "📘 API Endpoint Documentation",
    category: "Developer",
    goal: "Generate OpenAPI spec from endpoint description",
    context: "Developer explains an endpoint in plain English",
    details: "Include params, responses, error codes",
    steps: "Structure in OpenAPI 3.0 format",
    refine: "Make it developer-friendly",
  },
  "terraform-generate": {
    label: "☁️ Generate Terraform Config",
    category: "DevOps",
    goal: "Generate Terraform config for a new AWS S3 bucket",
    context: "Bucket should be private and versioned",
    details: "Use Terraform HCL, AWS provider",
    steps: "Define resource, tags, policy",
    refine: "Make reusable",
  },
  "release-notes": {
    label: "📝 Draft Release Notes",
    category: "Developer",
    goal: "Write release notes for a new version",
    context: "Feature: OAuth login; Fix: profile bug",
    details: "For non-technical readers",
    steps: "Split into Features / Fixes",
    refine: "Use bullet list format",
  },
  "log-analysis": {
    label: "📁 Analyze Server Logs",
    category: "Admin",
    goal: "Explain what's happening in these logs",
    context: "Apache/Nginx logs from a failing request",
    details: "Spot issues, suggest next steps",
    steps: "Highlight errors, correlate with timestamps",
    refine: "Avoid jargon",
  },
  dockerfile: {
    label: "🐳 Create Dockerfile",
    category: "DevOps",
    goal: "Generate Dockerfile for a Node.js app",
    context: "Node 18 app with Express and Mongo",
    details: "Small image size preferred",
    steps: "Include .dockerignore, healthcheck",
    refine: "Optimize layers",
  },
  "code-review": {
    label: "🔍 Code Review Feedback",
    category: "Developer",
    goal: "Generate review feedback for a PR",
    context: "JS codebase with new component",
    details: "Focus on clarity, performance, naming",
    steps: "List concerns + positive notes",
    refine: "Be constructive",
  },
  "architecture-diagram": {
    label: "🏗️ Generate Architecture Diagram",
    category: "Architect",
    goal: "Describe system architecture as a diagram",
    context: "Microservices app with API gateway",
    details: "Include DB, queues, services",
    steps: "Structure hierarchically",
    refine: "Use Mermaid.js syntax",
  },
  "incident-report": {
    label: "🚨 Incident Report Template",
    category: "Admin",
    goal: "Document a production incident",
    context: "Outage caused by config change",
    details: "Include timeline and resolution",
    steps: "Summarize in Root Cause, Impact, Resolution",
    refine: "Keep tone factual",
  },
  "uml-class": {
    label: "📐 Generate UML Class Diagram",
    category: "Architect",
    goal: "Convert code structure to UML diagram",
    context: "Object model with 3 classes and relationships",
    details: "Output in Mermaid or PlantUML",
    steps: "Identify attributes and methods",
    refine: "Clarify associations",
  },
  "shell-script": {
    label: "🔧 Generate Shell Script",
    category: "Admin",
    goal: "Write a Bash script to automate a task",
    context: "Daily log rotation and archiving",
    details: "Make it portable and secure",
    steps: "Add logging and error handling",
    refine: "Use `set -euo pipefail`",
  },
  postmortem: {
    label: "📄 Write Postmortem Summary",
    category: "Admin",
    goal: "Summarize a technical failure incident",
    context: "Deploy caused production crash",
    details: "Include impact, timeline, learnings",
    steps: "Use standardized sections",
    refine: "Add follow-up actions",
  },
  "ci-pipeline": {
    label: "⚙️ Generate CI Pipeline",
    category: "DevOps",
    goal: "Write CI config for building and testing",
    context: "React app using GitHub Actions",
    details: "Run tests and build on push",
    steps: "Split into install, test, build",
    refine: "Use caching where possible",
  },
  "jira-ticket": {
    label: "🎫 Create JIRA Ticket",
    category: "Tester",
    goal: "Generate a JIRA ticket from a dev request",
    context: "Dev wants to refactor legacy API",
    details: "Follow team ticketing format",
    steps: "Include description, acceptance, labels",
    refine: "Use clear title",
  },
  "load-test-plan": {
    label: "📈 Load Test Plan",
    category: "Tester",
    goal: "Write a test plan for load testing",
    context: "App will face 10K requests/min",
    details: "Use k6 for simulation",
    steps: "Define objectives, metrics, limits",
    refine: "Include monitoring",
  },
  "mock-data": {
    label: "🧪 Generate Mock Data",
    category: "Tester",
    goal: "Create JSON test data from schema",
    context: "User object with nested fields",
    details: "Include edge cases and nulls",
    steps: "Include valid/invalid records",
    refine: "Ensure realistic format",
  },
  "qa-checklist": {
    label: "✅ QA Checklist",
    category: "Tester",
    goal: "Create a checklist for QA before release",
    context: "React web app",
    details: "UI, functional, performance, security",
    steps: "Categorize by area",
    refine: "Make shareable",
  },
  "prompt-review": {
    label: "🧠 Prompt Review",
    category: "Developer",
    goal: "Improve an existing LLM prompt",
    context: "Prompt to summarize an email thread",
    details: "Ensure tone and scope are clear",
    steps: "Identify weaknesses, suggest edit",
    refine: "Make it reusable",
  },
};
